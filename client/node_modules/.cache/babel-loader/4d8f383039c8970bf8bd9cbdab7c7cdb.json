{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nexport default function UseDarkMode() {\n  _s();\n\n  const body = document.querySelector(\"body\");\n  const storedDarkMode = localStorage.getItem(\"darkMode\");\n  const [componentMounted, setComponentMounted] = useState(false);\n  const [darkMode, setDarkMode] = useState(storedDarkMode);\n\n  const setMode = mode => {\n    localStorage.setItem('darkMode', mode);\n    setDarkMode(mode);\n  };\n\n  const toggleDarkMode = () => {\n    setMode(darkMode === 'dark' ? 'light' : 'dark');\n  };\n\n  useEffect(() => {\n    if (darkMode === 'dark') {\n      body.classList.add('dark-mode');\n    } else {\n      body.classList.remove('dark-mode');\n    }\n\n    setComponentMounted(true);\n  }, [darkMode]);\n  return [darkMode, toggleDarkMode, componentMounted];\n}\n\n_s(UseDarkMode, \"kdv6vIyRaT6ChAU4e0yQDl4LENc=\");\n\n_c = UseDarkMode;\n\nvar _c;\n\n$RefreshReg$(_c, \"UseDarkMode\");","map":{"version":3,"sources":["/Users/Sunan/Projects/react/WebentwicklungHTW/client/src/hooks/useDarkMode.js"],"names":["useState","useEffect","UseDarkMode","body","document","querySelector","storedDarkMode","localStorage","getItem","componentMounted","setComponentMounted","darkMode","setDarkMode","setMode","mode","setItem","toggleDarkMode","classList","add","remove"],"mappings":";;AAAA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AAEA,eAAe,SAASC,WAAT,GAAuB;AAAA;;AAClC,QAAMC,IAAI,GAAGC,QAAQ,CAACC,aAAT,CAAuB,MAAvB,CAAb;AACA,QAAMC,cAAc,GAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAvB;AAEA,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CV,QAAQ,CAAC,KAAD,CAAxD;AACA,QAAM,CAACW,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAACM,cAAD,CAAxC;;AAEA,QAAMO,OAAO,GAAGC,IAAI,IAAI;AACpBP,IAAAA,YAAY,CAACQ,OAAb,CAAqB,UAArB,EAAiCD,IAAjC;AACAF,IAAAA,WAAW,CAACE,IAAD,CAAX;AACH,GAHD;;AAKA,QAAME,cAAc,GAAG,MAAM;AACzBH,IAAAA,OAAO,CAACF,QAAQ,KAAK,MAAb,GAAsB,OAAtB,GAAgC,MAAjC,CAAP;AACH,GAFD;;AAIAV,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIU,QAAQ,KAAK,MAAjB,EAAyB;AACrBR,MAAAA,IAAI,CAACc,SAAL,CAAeC,GAAf,CAAmB,WAAnB;AACH,KAFD,MAEO;AACHf,MAAAA,IAAI,CAACc,SAAL,CAAeE,MAAf,CAAsB,WAAtB;AACH;;AACDT,IAAAA,mBAAmB,CAAC,IAAD,CAAnB;AACH,GAPQ,EAON,CAACC,QAAD,CAPM,CAAT;AASA,SAAO,CAACA,QAAD,EAAWK,cAAX,EAA2BP,gBAA3B,CAAP;AACH;;GA1BuBP,W;;KAAAA,W","sourcesContent":["import {useState, useEffect} from 'react';\n\nexport default function UseDarkMode() {\n    const body = document.querySelector(\"body\");\n    const storedDarkMode = localStorage.getItem(\"darkMode\");\n\n    const [componentMounted, setComponentMounted] = useState(false);\n    const [darkMode, setDarkMode] = useState(storedDarkMode);\n\n    const setMode = mode => {\n        localStorage.setItem('darkMode', mode);\n        setDarkMode(mode);\n    }\n\n    const toggleDarkMode = () => {\n        setMode(darkMode === 'dark' ? 'light' : 'dark');\n    };\n\n    useEffect(() => {\n        if (darkMode === 'dark') {\n            body.classList.add('dark-mode');\n        } else {\n            body.classList.remove('dark-mode');\n        }\n        setComponentMounted(true);\n    }, [darkMode]);\n\n    return [darkMode, toggleDarkMode, componentMounted]\n}"]},"metadata":{},"sourceType":"module"}