{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/Sunan/Projects/react/WebentwicklungHTW/client/src/components/PrivateRoute.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Route, Redirect } from 'react-router-dom';\nimport { useAuth } from \"../context/auth\";\n\nfunction PrivateRoute({\n  component: Component,\n  ...rest\n}) {\n  _s();\n\n  const isAuthenticated = useAuth();\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: props => isAuthenticated ? /*#__PURE__*/_jsxDEV(Component, { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 21\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PrivateRoute, \"JNGTeCN0O1cSJcePuY60dgMyepM=\", false, function () {\n  return [useAuth];\n});\n\n_c = PrivateRoute;\nexport default PrivateRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["/Users/Sunan/Projects/react/WebentwicklungHTW/client/src/components/PrivateRoute.js"],"names":["React","Route","Redirect","useAuth","PrivateRoute","component","Component","rest","isAuthenticated","props"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,EAAeC,QAAf,QAA8B,kBAA9B;AACA,SAAQC,OAAR,QAAsB,iBAAtB;;AAEA,SAASC,YAAT,CAAsB;AAACC,EAAAA,SAAS,EAAEC,SAAZ;AAAuB,KAAGC;AAA1B,CAAtB,EAAuD;AAAA;;AACnD,QAAMC,eAAe,GAAGL,OAAO,EAA/B;AAEA,sBACI,QAAC,KAAD,OACQI,IADR;AAEI,IAAA,MAAM,EAAGE,KAAK,IACVD,eAAe,gBACX,QAAC,SAAD,OAAeC;AAAf;AAAA;AAAA;AAAA;AAAA,YADW,gBAGX,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AANZ;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH;;GAfQL,Y;UACmBD,O;;;KADnBC,Y;AAiBT,eAAeA,YAAf","sourcesContent":["import React from \"react\";\nimport {Route, Redirect} from 'react-router-dom';\nimport {useAuth} from \"../context/auth\";\n\nfunction PrivateRoute({component: Component, ...rest}) {\n    const isAuthenticated = useAuth();\n\n    return (\n        <Route\n            {...rest}\n            render={(props => (\n                isAuthenticated ? (\n                    <Component {...props}/>\n                ) : (\n                    <Redirect to=\"/login\"/>\n                )\n            ))}\n        />\n    );\n}\n\nexport default PrivateRoute;"]},"metadata":{},"sourceType":"module"}